{"version":3,"sources":["logo.svg","components/TransactionForm.js","components/TransactionList.js","App.js","reportWebVitals.js","index.js"],"names":["TransactionForm","state","returnStateObject","props","currentIndex","bAccountNo","iFSC","bName","amount","list","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","onAddorEdit","prevProps","this","length","autoComplete","onSubmit","placeholder","onChange","type","Component","TransactionList","returnList","data","push","localStorage","setItem","JSON","stringify","handleEdit","index","console","log","handleDelete","deleteList","splice","getItem","parse","map","item","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12e1d053.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\r\n\r\nclass TransactionForm extends Component {\r\n    state={...this.returnStateObject}\r\n\r\n    returnStateObject=()=>{\r\n        if(this.props.currentIndex==-1){\r\n            return{\r\n                bAccountNo:'',\r\n                iFSC:'',\r\n                bName:'',\r\n                amount:''\r\n            }\r\n        }else{\r\n            return this.props.list[this.props.currentIndex]\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps.currentIndex!==this.props.currentIndex || prevProps.list.length !== this.props.list.length){\r\n            this.setState({...this.returnStateObject()})\r\n        }\r\n    }\r\n\r\n    handleInputChange=e=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit=e=>{\r\n        e.preventDefault();\r\n        this.props.onAddorEdit(this.state)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n               <form  autoComplete='off' onSubmit={this.handleSubmit}>\r\n                   <input name='bAccountNo' \r\n                   placeholder='Enter account No' \r\n                   value={this.state.bAccountNo}\r\n                   onChange={this.handleInputChange}/><br/>\r\n                   <input name='iFSC' \r\n                   placeholder='Enter IFSC Code' \r\n                   value={this.state.iFSC}\r\n                   onChange={this.handleInputChange}/><br/>\r\n                   <input name='bName' \r\n                   placeholder='Enter Account holder name' \r\n                   value={this.state.bName}\r\n                   onChange={this.handleInputChange}/><br/>\r\n                   <input name='amount' \r\n                   placeholder='Enter Amount' \r\n                   value={this.state.amount}\r\n                   onChange={this.handleInputChange}/><br/>\r\n                   <button type=\"submit\">Submit</button>\r\n               </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TransactionForm;","import React, { Component } from 'react'\r\nimport TransactionForm from './TransactionForm'\r\n\r\nclass TransactionList extends Component {\r\n    state={\r\n        list:this.returnList(),\r\n        currentIndex:-1\r\n    }\r\n\r\n    returnList(){\r\n        if(localStorage.getItem('transactions')==null){\r\n            localStorage.setItem('transactions',JSON.stringify([]))\r\n        }\r\n        return JSON.parse(localStorage.getItem('transactions'))\r\n    }\r\n\r\n    onAddorEdit=(data)=>{\r\n        var list=this.returnList();\r\n        if(this.state.currentIndex == -1){\r\n            list.push(data)\r\n        }else{\r\n            list[this.state.currentIndex] = data\r\n        }\r\n        \r\n        localStorage.setItem('transactions',JSON.stringify(list))\r\n        this.setState({list:list,currentIndex:-1})\r\n    }\r\n\r\n    handleEdit=(index)=>{\r\n        this.setState({\r\n            currentIndex:index\r\n        })\r\n        console.log(this.state.currentIndex)\r\n\r\n    }\r\n\r\n    handleDelete=(index)=>{\r\n        var deleteList = this.returnList();\r\n        deleteList.splice(index,1)\r\n        localStorage.setItem('transactions',JSON.stringify(deleteList))\r\n        this.setState({list:deleteList,currentIndex:-1})\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TransactionForm\r\n                onAddorEdit={this.onAddorEdit}\r\n                currentIndex={this.state.currentIndex}\r\n                list={this.state.list}\r\n                />\r\n                <hr></hr>\r\n                <table>\r\n                    <thead>\r\n                        <td>Account No</td>\r\n                        <td>Account Name</td>\r\n                        <td>Amount</td>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.list.map((item,index)=>{\r\n                                return <tr key={index}>\r\n                                    <td>{item.bAccountNo}</td>\r\n                                    <td>{item.bName}</td>\r\n                                    <td>{item.amount}</td>\r\n                                    <td><button onClick={()=>this.handleEdit(index)}>Edit</button></td>\r\n                                    <td><button onClick={()=>this.handleDelete(index)}>Delete</button></td>\r\n                                </tr>\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default TransactionList;","import logo from './logo.svg';\nimport './App.css';\nimport TransactionList from './components/TransactionList';\n\nfunction App() {\n  return (\n    <div>\n     <TransactionList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}